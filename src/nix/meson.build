nix = executable(
  'nix',
  [
    'add-to-store.cc',
    'build.cc',
    'cat.cc',
    'command.cc',
    'copy.cc',
    'doctor.cc',
    'dump-path.cc',
    'edit.cc',
    'eval.cc',
    'hash.cc',
    'installables.cc',
    'legacy.cc',
    'log.cc',
    'ls.cc',
    'main.cc',
    'optimise-store.cc',
    'path-info.cc',
    'ping-store.cc',
    'progress-bar.cc',
    'repl.cc',
    'run.cc',
    'search.cc',
    'show-config.cc',
    'show-derivation.cc',
    'sigs.cc',
    'upgrade-nix.cc',
    'verify.cc',
    'why-depends.cc',

    '../build-remote/build-remote.cc',

    '../nix-build/nix-build.cc',
    '../nix-channel/nix-channel.cc',
    '../nix-collect-garbage/nix-collect-garbage.cc',
    '../nix-copy-closure/nix-copy-closure.cc',
    '../nix-daemon/nix-daemon.cc',
    '../nix-env/nix-env.cc',
    '../nix-env/user-env.cc',
    '../nix-instantiate/nix-instantiate.cc',
    '../nix-prefetch-url/nix-prefetch-url.cc',
    '../nix-store/dotgraph.cc',
    '../nix-store/graphml.cc',
    '../nix-store/nix-store.cc',
  ],
  include_directories : global_subdirs,
  dependencies : [
    global_libs,

    pthread,
    libsodium,
    editline,
  ],
  link_with : [
    libexpr,
    libmain,
    libstore,
    libutil,
  ],
)

foreach name : [
  'nix-build',
  'nix-channel',
  'nix-collect-garbage',
  'nix-copy-closure',
  'nix-daemon',
  'nix-env',
  'nix-hash',
  'nix-instantiate',
  'nix-prefetch-url',
  'nix-shell',
  'nix-store',
]
  custom_target(
    name,
    output : name,
    input : nix,
    command : ['ln', '-s', '@INPUT@', '@OUTPUT@'],
    install : true,
    install_dir : get_option('bindir')
  )
endforeach
